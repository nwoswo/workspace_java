<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                                 http://www.springframework.org/schema/jdbc
                                 http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
                                 http://www.springframework.org/schema/context 
                                 http://www.springframework.org/schema/context/spring-context-4.0.xsd
	                             http://www.springframework.org/schema/tx 
	                             http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
          


    <context:annotation-config/>                   
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
    </bean>

    
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="pe.mef.st.dao" />
		
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
 
   	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
  		<property name="mapperLocations" value="classpath*:mvisor/*Mapper.xml" />
  		
	</bean>  
   	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="${database.jndiName}"></property>
	</bean>
	
 

    
    
</beans>